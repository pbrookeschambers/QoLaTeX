\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{qolistings}[2020/11/05 Predefined lstlistings environments]

\RequirePackage{listings}
\RequirePackage[framemethod = tikz]{mdframed}
\RequirePackage{xcolor}
\RequirePackage{forarray}
\RequirePackage{keyval}
\RequirePackage{ifthen}
\RequirePackage{kvoptions}


% Global options ===============================================================
\SetupKeyvalOptions{
  family = QolstGlobalOptions,
  prefix = qolstglobalop@
}

\DeclareStringOption[false]{frame}
\DeclareBoolOption[false]{background}
\DeclareBoolOption[false]{latexcomments}
\DeclareBoolOption[false]{latexmaths}
\DeclareBoolOption[false]{latexmath}
\DeclareBoolOption[false]{latex}
\DeclareBoolOption[false]{roundedcorners}

\ProcessKeyvalOptions*

% ==============================================================================

\def\instring#1#2{TT\fi\begingroup
  \edef\x{\endgroup\noexpand\in@{#1}{#2}}\x\ifin@} % Used for frame options to tell if a given side is included

\newcommand{\colorprovide}[2]{\@ifundefinedcolor{#1}{\colorlet{#1}{#2}}{}}      % (*Only defines the new colour if it has not already been defined*)

% (*Now we define the default colour scheme if and only if a scheme has not already been loaded. This should avoid issues of loading order if both \texttt{qolistings} and \texttt{officecolours} packages are used.*)

\DefineArrayVar%
{twilight}%
{@}%
{,}%
{ForegroundColour,BackgroundColour,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Hyperlink,FollowedHyperlink}%
{,}%
{24213E, E9EAEF, E4BC50, 86C0C4, E68E3A, 949FDE, 89A049, CE5D45, 0000FF, 0000AA}

\ForEach%
  {,}%
  {%
    \providecolor{\thislevelitem}{HTML}{\csname twilight@\thislevelitem\endcsname}%
    \colorprovide{\thislevelitem_1}{\thislevelitem!50!black}
    \colorprovide{\thislevelitem_2}{\thislevelitem!75!black}
    \colorprovide{\thislevelitem_3}{\thislevelitem!60!white}
    \colorprovide{\thislevelitem_4}{\thislevelitem!40!white}
    \colorprovide{\thislevelitem_5}{\thislevelitem!20!white}
  }
  {ForegroundColour,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Hyperlink,FollowedHyperlink}
  \providecolor{BackgroundColour}{HTML}{\csname twilight@BackgroundColour\endcsname}%
  \colorprovide{BackgroundColour_5}{BackgroundColour!90!black}
  \colorprovide{BackgroundColour_4}{BackgroundColour!75!black}
  \colorprovide{BackgroundColour_3}{BackgroundColour!50!black}
  \colorprovide{BackgroundColour_2}{BackgroundColour!25!black}
  \colorprovide{BackgroundColour_1}{BackgroundColour!10!black}

% (*Now we define a set of useful styles for listings*)

\lstdefinestyle{main}{
    commentstyle        = \color{ForegroundColour_3},
    keywordstyle        = \color{Accent1}\scshape,
    numberstyle         = \tiny\color{ForegroundColour},
    stringstyle         = \color{Accent2},
    basicstyle          = \ttfamily\small\color{ForegroundColour},
    breakatwhitespace   = false,
    breaklines          = true,
    captionpos          = b,
    keepspaces          = true,
    numbers             = left,
    numbersep           = 18pt,
    showspaces          = false,
    showstringspaces    = false,
    showtabs            = false,
    tab                 = {\color{ForegroundColour_5}|\ \ \ \ },% (*Define the tab behaviour anyway so that it's already defined if \texttt{showtabs} is overridden*)
    tabsize             = 4,
  	xleftmargin         = 0pt,
  	xrightmargin        = 0cm,
    breakindent         = 1.5em,
    escapebegin = \normalfont\color{ForegroundColour_3},
    escapeend = \normalcolor
}

% (*Creating command options*) =================================================


%(*Creating global options*)

%(*Here, we take the booleans as string so that they can be more easily passed to the ifthen package later.*)

\define@key{qoGlobal}{lst options}{\def\qoGlobal@lstoptions{#1}}
\define@key{qoGlobal}{lst early options}{\def\qoGlobal@lstearlyoptions{#1}}
\define@key{qoGlobal}{frame}[true]{\def\qoGlobal@frame{#1}}
\define@key{qoGlobal}{background}[true]{\def\qoGlobal@background{#1}}
\define@key{qoGlobal}{rounded corners}[true]{\def\qoGlobal@roundedcorners{#1}}
\define@key{qoGlobal}{latex comments}[true]{\def\qoGlobal@latexcomments{#1}}
\define@key{qoGlobal}{latex}[true]{\def\qoGlobal@latexcomments{#1}\def\qoGlobal@latexmaths{#1}}
\define@key{qoGlobal}{latex maths}[true]{\def\qoGlobal@latexmaths{#1}}
\define@key{qoGlobal}{latex math}[true]{\def\qoGlobal@latexmaths{#1}} % (*Allow for US spelling as well.*)
\define@key{qoGlobal}{mdframed options}{\def\qoGlobal@mdframedoptions{#1}}

\setkeys{qoGlobal}{%
    lst options = {},
    lst early options = {},
    frame = \qolstglobalop@frame,
    background = \ifqolstglobalop@background true\else false\fi,
    rounded corners = \ifqolstglobalop@roundedcorners true\else false\fi,
    latex comments = \ifqolstglobalop@latexcomments true\else false\fi,
    latex maths = \ifqolstglobalop@latexmaths true\else false\fi, % TODO -- Include US spelling as well, without overriding UK spelling
    mdframed options = {}
}

\newcommand{\qolstset}[1]{
    \setkeys{qoGlobal}{#1}
}

% (*Creating booleans for options*)

\newboolean{qoBackground}
\setboolean{qoBackground}{false}
\newboolean{qoRoundedCorners}
\setboolean{qoRoundedCorners}{false}
\newboolean{qoLatexComments}
\setboolean{qoLatexComments}{false}
\newboolean{qoLatexMaths}
\setboolean{qoLatexMaths}{false}
\newboolean{qoLatex}
\setboolean{qoLatex}{false}

% (*Creating local options*)

\define@key{qo}{lst options}{\def\qo@lstoptions{#1}}
\define@key{qo}{lst early options}{\def\qo@lstearlyoptions{#1}}
\define@key{qo}{frame}[true]{\def\qo@frame{#1}}
\define@key{qo}{background}[true]{\setboolean{qoBackground}{#1}}
\define@key{qo}{rounded corners}[true]{\setboolean{qoRoundedCorners}{#1}}
\define@key{qo}{latex comments}[true]{\setboolean{qoLatexComments}{#1}}
\define@key{qo}{latex}[true]{\setboolean{qoLatexComments}{#1}\setboolean{qoLatexMaths}{#1}}
\define@key{qo}{latex maths}[true]{\setboolean{qoLatexMaths}{#1}}
\define@key{qo}{latex math}[true]{\setboolean{qoLatexMaths}{#1}} % (*Allow for US spelling as well.*)
\define@key{qo}{mdframed options}{\def\qo@mdframedoptions{#1}}

\newcommand{\setkeydefaults}{\setkeys{qo}{% Default to the global options for everything except lst option and mdframed options
    lst options = {},
    lst early options = {},
    frame = \qoGlobal@frame,
    background = \qoGlobal@background,
    rounded corners = \qoGlobal@roundedcorners,
    latex comments = \qoGlobal@latexcomments,
    latex maths = \qoGlobal@latexmaths,
    mdframed options = {}
}}

\lstset{style = main}

\def\mainstyle{, style = main, }

\newcommand{\qoinputlisting}[2][]{
    % Process key-value pairs
    \setkeydefaults%
    \setkeys{qo}{#1}

    \begingroup     % (* We only wish to set these locally, but cannot pass them as optional arguments to \verb|\lstinputlisting| without much more complicated expansions. This is a terrible solution.*)
    %
        \expandafter\lstset\expandafter{\qoGlobal@lstearlyoptions} % Apply the global early options before local options
        \expandafter\lstset\expandafter{\qo@lstearlyoptions} % Apply the early options before setting the main style
        \lstset{style = main}
        % LaTeX Comments:
        \ifthenelse{
            \boolean{qoLatexComments}
        }{
            \lstset{escapeinside = {(*}{*)}}
        }{
            % --Nothing to see here--
        }
        % LaTeX Maths:
        \ifthenelse{
            \boolean{qoLatexMaths}
        }{
            \lstset{mathescape = true}
        }{
            % --Nothing to see here--
        }
        %
        \expandafter\lstset\expandafter{\qoGlobal@lstoptions} % Apply remaining global lst options before local options
        \expandafter\lstset\expandafter{\qo@lstoptions} % Apply remaining lst options to override any in the main style
        %
        \mdfsetup{ % Prepare the default margins for mdframed
            innerleftmargin = 5pt,
            innerrightmargin = 5pt,
            leftmargin = 0pt,
            rightmargin = 0pt
        }
        %
        % Apply background
        \ifthenelse{
            \boolean{qoBackground}
        }{
            \mdfsetup{backgroundcolor = BackgroundColour}
        }{
            % --Nothing to see here--
        }
        %
        % Start processing frame options
        \mdfsetup{leftline = false, rightline = false, topline = false, bottomline = false} % Start with no frame, turn on frames if needed
        \ifthenelse{    % Outer if/then/else to not get a false positive for leftline when \qo@frame is false (due to the "l" in "false")
            \equal{\qo@frame}{false}
        }
        {
            \ifthenelse{ % If there is no border or background, then horizontally align the listing with the rest of the text.
                \boolean{qoBackground}
            }{
                % --Nothing to see here--
            }{
                \mdfsetup{
                    innerleftmargin = 0pt,
                    innerrightmargin = 0pt
                }
                \lstset{
                    xleftmargin = -1.25pt,          % Remove linewidth of mdframed to realign to the left.
                    numbersep = 11.15pt             % Realign numbers to the same point
                }
            }
        }{ % If there is a frame of some kind (\qo@frame =/= false)
            \mdfsetup{linecolor = ForegroundColour, linewidth = 1.25pt}
            \ifthenelse{    % If there is a full frame:
                \equal{\qo@frame}{true}
            }{
                \mdfsetup{leftline = true, rightline = true, topline = true, bottomline = true}
            }{  % Else work out which frame sections are wanted. Doesn't currently accept capitals
                \if\instring{l}{\qo@frame}
                    \mdfsetup{leftline = true}
                \fi
                \if\instring{r}{\qo@frame}
                    \mdfsetup{rightline = true}
                \fi
                \if\instring{t}{\qo@frame}
                    \mdfsetup{topline = true}
                \fi
                \if\instring{b}{\qo@frame}
                    \mdfsetup{bottomline = true}
                \fi
            }
        }
        % Deal with rounded corners. Not included in frame options since it also affects the background.
        \ifthenelse{\boolean{qoRoundedCorners}}{
            \mdfsetup{roundcorner = 0.5em}
        }{
            % --Nothing to see here--
        }
        %
        % Now apply the mdframed options supplied by the user, to override any previously defined options.
        \expandafter\mdfsetup\expandafter{\qo@mdframedoptions}% Apply the global options first, before the local options.
        \expandafter\mdfsetup\expandafter{\qo@mdframedoptions}%
        % Now create the actual listing.
        \begin{mdframed}%
            \leavevmode\lstinputlisting{#2}% Leavevmode to avoid issues with paragraph breaks changing top margins for some reason.
        \end{mdframed}%
    \endgroup%
}


% Environment hangs when nested!
